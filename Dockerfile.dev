# STS Neural Agent - Development Docker Image
# Optimized for maximum cache efficiency during development

FROM pytorch/pytorch:latest

# Environment setup (rarely changes)
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV WANDB_CACHE_DIR=/app/wandb_cache
ENV PYTHONPATH=/app

# Install all dependencies in one layer (changes infrequently)
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    curl \
    vim \
    tmux \
    htop \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Install Python dependencies (changes infrequently)
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy and build C++ code (only rebuilds if C++ changes)
COPY sts_lightspeed/ sts_lightspeed/
RUN cd sts_lightspeed && \
    cmake -DPYTHON_EXECUTABLE=$(which python) . && \
    make -j$(nproc) && \
    echo "âœ… C++ build complete"

# Copy Python code (rebuilds when Python code changes, but C++ layer is cached)
COPY *.py ./

# Create output directories
RUN mkdir -p sts_models wandb_cache logs

# Setup user
RUN useradd -m -u 1000 trainer && chown -R trainer:trainer /app
USER trainer

# Quick test
RUN python -c "import sys; sys.path.insert(0, 'sts_lightspeed'); import slaythespire; print('Ready!')"

CMD ["python", "train_sts_agent.py", "train", "--episodes", "100", "--no-wandb"]